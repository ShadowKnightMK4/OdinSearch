
{0}.exe  /Arguments

Special Data Types to Know:

MatchStyleFileAttributes:
	This controls how the app will compare a file attribute with a value specified.
	One can add the wanted numbers together or just smoosh the words together to get the 
	same effect.

	MatchAny=1;			Positive effect means a match must contain at least one attribute.
						Invert effect means at least one specified attribute must NOT be there.
	MatchAll=2;			Positive effet means at any match found must have *all* attributes
						Invert effect means any match found must have NONE of the set attributes 
	Invert=4;			This inverts the indicated match effet (MatchAny or MatchAll)
	Exacting=8;			This means the examined item must have the same attributes you specified.
						Example:  Choosing Hidden and Directory Attribute + this would cause
						a folder that's Hidden, a Directory and set to readonly to NOT MATCH.
MatchStylesString:
	This controls how the app will compare a filename or full file location against your
	specified value.
	One can add the wanted numbers together or just smoosh the words together to get the 
	same effect.

	MatchAny=1;			Positive effect means a match must contain at least specified value.
						Invert effect means at least one specified attribute must NOT be there.
	MatchAll=2;			Positive effet means at any match found must have *all* specified values
						Invert effect means any match found must have NONE of the values set. 
	Invert=4;			This inverts the indicated match effet (MatchAny or MatchAll)
	CaseImportant=32;	This means the match will case about the case such as CAT not matching cAt.

DateTime:
	This is a combination of a Date and Time such as "12/1/97" or "Aug 5, 2025".  

	
Arguments to use:

/outstream={'stdout', 'stderr', file location}
	This flag controlls *where* the app will send matches. Use /outstream=stdout or /outstream=stderr to send to that console stream.
	One may also specify a file system location to save the output too such as "/outstream=X:\Results.txt" and it may also be
	quoted.

/outformat= {'unicode', 'cvsfile'}
	This flag controls *how* the app will send matches.  Use /outstream=unicode to send as unicode text and /outstream=cvsfile for the CSV /
	comma delimited file.

/fullname={wildcard string}
	This flag sets what the app will compare against the full exact location of the examing file system item.
	Example: "/fullname=C:\Windows\*.exe" would let one match many exe file located in that folder.
	The path may be quoted with " or '.

/fullcompare={int, string}
	This flag sets how the app wil compare the string set by /fullname to the examined file item.
	int must be from the MatchStyleString format above or it's gonna be rejected.
	string must match any combination of the MatchStyleString about or its gonna be rejected.
	The path may be quoted with " or '.


/filename={wildcard string}
	This flag sets what the app will compare gainst the file item's name only.
	Example: "/filename=*.dll"  would match files that have a .dll extension.

/filecompare={int, string}
	This flag sets how the app will compare the string set by /filename to the examined file item.
	int must be from the MatchStyleString format above or it's gonna be rejected.
	string must match any combination of the MatchStyleString about or its gonna be rejected.


/notcreatedbefore={datetime}
	This flag instructs the app to discard any matches whose creation date is earlier than the 
	specified time.

/notcreatedafter={datetime}
	This flag tells the app to discard any matches whose creation date is after the specified time.

/nolastmodifiedbefore={datetime}
	This flag tells the software to discard matches whose last modified date is earlier than this.

/lastmodifiedbefor={datetime}
	This flag tells the app to discard matches who were changed *after* this indicated time.

/lastaccessedbefore={datetime}
	This flag tells the app to ignore matches whose last access datetime is before the indicated one.

/nolastaccessedbefore{datetime}
	This flag tells the app to ignore files whose last access datetime is after this.


/fileattrib_check={int, string}
	This sets what the app will be comparing examined file items with.
	It can be an int or a string from the MatchStyleAttributes above.


There is a plugin system also and this trumps the /outstream /outformat stuff. These 
arguments are there to allow users to use them.

/plugin={file location}
	This will load an unmanaged (non .NET) shared library and use that to deal with matches
	according to unmanaged plugin specifications.
	It can be quoted.
	
	
/managed={file location}
	This will load a managed shared library to use and deal with managed.
	It can be quoted.

/managed_handler="classname"
	This sets the class name that the app will use. 

One final note:
	One can have more flexibility by going and getting a copy of the source.
